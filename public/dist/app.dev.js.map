{"version":3,"sources":["app.js"],"names":["socket","io","form","document","getElementById","messages","usernameInput","messageInput","userList","addEventListener","e","preventDefault","username","value","message","emit","on","data","time","Date","toLocaleTimeString","messageElement","createElement","classList","add","innerHTML","appendChild","scrollTop","scrollHeight","joinMessage","leaveMessage","users","forEach","user","userItem","innerText"],"mappings":"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","sourcesContent":["const socket = io();  // Connect to the Socket.IO server\r\n\r\nconst form = document.getElementById('chat-form');\r\nconst messages = document.getElementById('messages');\r\nconst usernameInput = document.getElementById('username');\r\nconst messageInput = document.getElementById('message');\r\nconst userList = document.getElementById('user-list');\r\n\r\n// Handle form submission\r\nform.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n\r\n  const username = usernameInput.value;\r\n  const message = messageInput.value;\r\n\r\n  if (username && message) {\r\n    socket.emit('sendMessage', {\r\n      username: username,\r\n      message: message,\r\n    });\r\n\r\n    // Clear the input field after sending the message\r\n    messageInput.value = '';\r\n  }\r\n});\r\n\r\n// Listen for incoming messages\r\nsocket.on('receiveMessage', (data) => {\r\n  const time = new Date().toLocaleTimeString();\r\n  const messageElement = document.createElement('div');\r\n  messageElement.classList.add('user');\r\n  messageElement.innerHTML = `<strong>${data.username}</strong> [${time}]: ${data.message}`;\r\n  messages.appendChild(messageElement);\r\n\r\n  // Scroll to the bottom of the messages\r\n  messages.scrollTop = messages.scrollHeight;\r\n});\r\n\r\n// Listen for user join/leave events\r\nsocket.on('userJoin', (username) => {\r\n  const joinMessage = document.createElement('div');\r\n  joinMessage.classList.add('system');\r\n  joinMessage.innerHTML = `${username} joined the chat`;\r\n  messages.appendChild(joinMessage);\r\n});\r\n\r\nsocket.on('userLeave', (username) => {\r\n  const leaveMessage = document.createElement('div');\r\n  leaveMessage.classList.add('system');\r\n  leaveMessage.innerHTML = `${username} left the chat`;\r\n  messages.appendChild(leaveMessage);\r\n});\r\n\r\n// Listen for active users\r\nsocket.on('updateUsers', (users) => {\r\n  userList.innerHTML = ''; // Clear the list\r\n  users.forEach((user) => {\r\n    const userItem = document.createElement('li');\r\n    userItem.classList.add('active');\r\n    userItem.innerText = user;\r\n    userList.appendChild(userItem);\r\n  });\r\n});\r\n"],"file":"app.dev.js"}