{"version":3,"sources":["server.js"],"names":["express","require","Server","path","app","port","use","join","__dirname","get","req","res","sendFile","server","listen","console","log","io","on","socket","data","time","Date","toLocaleTimeString","emit","username","message"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACmBA,OAAO,CAAC,WAAD,C;IAAlBC,M,YAAAA,M;;AACR,IAAMC,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAMG,GAAG,GAAGJ,OAAO,EAAnB;AACA,IAAMK,IAAI,GAAG,IAAb,C,CAAmB;AAEnB;;AACAD,GAAG,CAACE,GAAJ,CAAQN,OAAO,UAAP,CAAeG,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CAEA;;AACAJ,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,QAAJ,CAAaT,IAAI,CAACI,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAb;AACD,CAFD;AAIA,IAAMK,MAAM,GAAGT,GAAG,CAACU,MAAJ,CAAWT,IAAX,EAAiB,YAAM;AACpCU,EAAAA,OAAO,CAACC,GAAR,iDAAqDX,IAArD;AACD,CAFc,CAAf;AAIA,IAAMY,EAAE,GAAG,IAAIf,MAAJ,CAAWW,MAAX,CAAX;AAEAI,EAAE,CAACC,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC9BJ,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAD8B,CAG9B;;AACAG,EAAAA,MAAM,CAACD,EAAP,CAAU,aAAV,EAAyB,UAACE,IAAD,EAAU;AACjC,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAb;AACAN,IAAAA,EAAE,CAACO,IAAH,CAAQ,gBAAR,EAA0B;AACxBC,MAAAA,QAAQ,EAAEL,IAAI,CAACK,QADS;AAExBC,MAAAA,OAAO,EAAEN,IAAI,CAACM,OAFU;AAGxBL,MAAAA,IAAI,EAAEA;AAHkB,KAA1B;AAKD,GAPD,EAJ8B,CAa9B;;AACAF,EAAAA,MAAM,CAACD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC5BH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAFD;AAGD,CAjBD","sourcesContent":["const express = require('express');\r\nconst { Server } = require('socket.io');\r\nconst path = require('path');\r\n\r\nconst app = express();\r\nconst port = 3000; // Port for local testing\r\n\r\n// Serve static files (like CSS, JS, images) from the \"public\" folder\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n// Route for home page\r\napp.get('/', (req, res) => {\r\n  res.sendFile(path.join(__dirname, 'public', 'index.html'));\r\n});\r\n\r\nconst server = app.listen(port, () => {\r\n  console.log(`Server is running on http://localhost:${port}`);\r\n});\r\n\r\nconst io = new Server(server);\r\n\r\nio.on('connection', (socket) => {\r\n  console.log('A user connected');\r\n\r\n  // Handle sending a message\r\n  socket.on('sendMessage', (data) => {\r\n    const time = new Date().toLocaleTimeString();\r\n    io.emit('receiveMessage', {\r\n      username: data.username,\r\n      message: data.message,\r\n      time: time,\r\n    });\r\n  });\r\n\r\n  // Handle user disconnecting\r\n  socket.on('disconnect', () => {\r\n    console.log('User disconnected');\r\n  });\r\n});\r\n\r\n\r\n\r\n"],"file":"server.dev.js"}